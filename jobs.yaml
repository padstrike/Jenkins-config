jobs:
    - script: |
        // === 1. Create the main DevOps folder ===
        folder('PAD') {
            description('Main PAD folder')
        }

        folder('PAD/DevOps') {
            description('DevOps folder inside PAD')
        }

        // === 2. Configuration constants ===
        def repoUrl = 'https://github.com/padstrike/example-pipeline.git'
        def projects = ['project-a', 'project-b']
        def environments = ['dev', 'sit', 'uat']

        // === 3. Generate folders and jobs under PAD/DevOps ===
        projects.each { projectName ->
            def projectFolder = "PAD/DevOps/${projectName}"

            folder(projectFolder) {
                description("Project folder for ${projectName} under DevOps")
            }

            environments.each { env ->
                def jobName = "${projectFolder}/${projectName}-${env}"
                def jenkinsfilePath = "${projectName}/${env}.Jenkinsfile"

                try {
                    pipelineJob(jobName) {
                        description("Pipeline for ${projectName} [${env}] under DevOps")
                        keepDependencies(false)

                        definition {
                            cpsScm {
                                scm {
                                    git {
                                        remote {
                                            url(repoUrl)
                                            credentials('gitlab')
                                        }
                                        branch('main')
                                    }
                                }
                                scriptPath(jenkinsfilePath)
                                lightweight(true)
                            }
                        }

                        disabled(false)
                    }
                } catch (Exception e) {
                    println '‚ùå Failed to create job: ' + e.toString()
                }
            }
        }

